name: 'Terraform CI/CD'

on:
  push:
    branches:
      - main 

jobs:
  terraform:
    name: 'Terraform-ci'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
    
    # Azure Login (using Service Principal)
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Initialize Terraform
    - name: Terraform Init
      run: terraform init

    # Check Terraform format
    - name: Terraform Format
      run: terraform fmt -check

    # Run Terraform Plan
    - name: Terraform Plan
      env:
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
          ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
  
    # Upload the Terraform plan as an artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with: 
        name: terraform-plan
        path: tfplan.out

    # Download the Terraform plan artifact  
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan
    - name: Apply Terraform Plan
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
          ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
      steps:
        run: terraform apply -auto-approve tfplan.out   
        